AWSTemplateFormatVersion: 2010-09-09
Description: An AWS Serverless Specification template describing your function.
Resources:
  YadonGet:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: yadonget
        S3Key: c81b2594b782ad42ea8ffeed2b04f730
      Description: ''
      Tags:
        - Value: SAM
          Key: 'lambda:createdBy'
      MemorySize: 128
      Handler: lambda_function.lambda_handler
      Role: 'arn:aws:iam::197242337356:role/service-role/Eevee'
      Timeout: 3
      Runtime: python2.7
  ServerlessRestApiDeployment3a0ca327ea:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref ServerlessRestApi
      Description: 'RestApi deployment id: 3a0ca327ea58418ed7efc488a292f32d60e39722'
      StageName: Stage
#  ServerlessRestApiProdStage:
#    Type: 'AWS::ApiGateway::Stage'
#    Properties:
#      DeploymentId: !Ref ServerlessRestApiDeployment3a0ca327ea
#      RestApiId: !Ref ServerlessRestApi
#      StageName: Prod
  YadonGetApi1PermissionTest:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref YadonGet
      SourceArn: !Sub
        - >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/yadonget
        - __Stage__: '*'
          __ApiId__: !Ref ServerlessRestApi
  YadonGetApi1PermissionProd:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref YadonGet
      SourceArn: !Sub
        - >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/POST/yadonget
        - __Stage__: Prod
          __ApiId__: !Ref ServerlessRestApi
  ServerlessRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Body:
        info:
          version: '1.0'
          title: !Ref 'AWS::StackName'
        paths:
          /yadonget:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws
                uri: !Sub >-
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${YadonGet.Arn}/invocations
                responses:
                      default:
                        statusCode: "200"
                passthroughBehavior: "when_no_match"
              responses:
                 '200':
                    description: OK

        swagger: '2.0'
